/*!
 * peer-sock
 * 
 * @author Wil Neeley <william.neeley@gmail.com> (https://github.com/Xaxis)
 * @version 1.0.0
 * @license MIT
 */
var PeerSock=function(a){return a=a||{},a.rtc_handlers=a.rtc_handlers||{},a.dc_handlers=a.dc_handlers||{},a.signal=a.signal||{},Object.assign(Object.create({}),{pc:null,channels:{},debug:a.debug||!1,PeerConnection:window.mozRTCPeerConnection||window.webkitRTCPeerConnection||window.RTCPeerConnection,IceCandidate:window.mozRTCIceCandidate||window.RTCIceCandidate||window.RTCIceCandidate,SessionDescription:window.mozRTCSessionDescription||window.RTCSessionDescription,getUserMedia:navigator.getUserMedia||navigator.mozGetUserMedia||navigator.webkitGetUserMedia,rtc_config:a.rtc_config||{iceServers:[{url:"stun:23.21.150.121"},{url:"stun:stun.l.google.com:19302"}]},rtc_options:a.rtc_options||{optional:[{DtlsSrtpKeyAgreement:!0}]},rtc_handlers:{onaddstream:a.rtc_handlers.onaddstream||function(a){this.PeerSock.debug&&console.log("PeerSock.rtc_handlers.onaddstream::",a)},ondatachannel:a.rtc_handlers.ondatachannel||function(a){this.PeerSock.debug&&console.log("PeerSock.rtc_handlers.ondatachannel::",a)},onicecandidate:a.rtc_handlers.onicecandidate||function(a){if(this.PeerSock.debug&&console.log("PeerSock.rtc_handlers.onicecandidate::",a),null!=a.candidate){var b=this,c=a.candidate,d=this.PeerSock.client_id,e=this.PeerSock.peer_id;this.PeerSock.signal.onmessage("PeerSock_IceCandidate",function(a){b.PeerSock.pc.addIceCandidate(new b.PeerSock.IceCandidate(a.message))}),this.PeerSock.signal.send("PeerSock_IceCandidate",e,d,{candidate:c.candidate,sdpMLineIndex:c.sdpMLineIndex}),this.onicecandidate=null}},oniceconnectionstatechange:a.rtc_handlers.oniceconnectionstatechange||function(a){this.PeerSock.debug&&console.log("PeerSock.rtc_handlers.oniceconnectionstatechange::",a)},onidentityresult:a.rtc_handlers.onidentityresult||function(a){this.PeerSock.debug&&console.log("PeerSock.rtc_handlers.onidentityresult::",a)},onidpassertionerror:a.rtc_handlers.onidpassertionerror||function(a){this.PeerSock.debug&&console.log("PeerSock.rtc_handlers.onidpassertionerror::",a)},onidpvalidationerror:a.rtc_handlers.onidpvalidationerror||function(a){this.PeerSock.debug&&console.log("PeerSock.rtc_handlers.onidpvalidationerror::",a)},onnegotiationneeded:a.rtc_handlers.onnegotiationneeded||function(a){this.PeerSock.debug&&console.log("PeerSock.rtc_handlers.onnegotiationneeded::",a)},onpeeridentity:a.rtc_handlers.onpeeridentity||function(a){this.PeerSock.debug&&console.log("PeerSock.rtc_handlers.onpeeridentity::",a)},onremovestream:a.rtc_handlers.onremovestream||function(a){this.PeerSock.debug&&console.log("PeerSock.rtc_handlers.onremovestream::",a)},onsignalstatechange:a.rtc_handlers.onsignalstatechange||function(a){this.PeerSock.debug&&console.log("PeerSock.rtc_handlers.onsignalstatechange::",a)}},dc_config:a.dc_config||{ordered:!0,reliable:!0},dc_handlers:{onopen:a.dc_handlers.onopen||function(a){this.PeerSock.debug&&console.log("PeerSock.dc_handlers.onopen::",a)},onerror:a.dc_handlers.onerror||function(a){this.PeerSock.debug&&console.log("PeerSock.dc_handlers.onerror::",a)},onmessage:a.dc_handlers.onmessage||function(a){this.PeerSock.debug&&console.log("PeerSock.dc_handlers.onmessage::",a)},onclose:a.dc_handlers.onclose||function(a){this.PeerSock.debug&&console.log("PeerSock.dc_handlers.onclose::",a)}},signal:{socket:a.socket,send:a.signal.send||function(a,b,c,d){this.socket.emit("MessageToPeer",{handler_id:a,peer_id:b,client_id:c,message:d})},onmessage:a.signal.onmessage||function(a,b){this.socket.on(a,function(a){b(a)})}},errorHandler:a.errorHandler||function(a){console.log(a)},newPeerConnection:function(a){a=a||{};var b=new this.PeerConnection(a.rtc_config||this.rtc_config,a.rtc_options||this.rtc_options),c=a.rtc_handlers||{},d={};for(var e in this.rtc_handlers)d[e]=c[e]||this.rtc_handlers[e],b[e]=d[e];return b.PeerSock=this,this.pc=b},newDataChannel:function(a){var b=this,c=a.connection||this.pc,d=a.dc_handlers||{},e={},f=function(){var a=Math.floor(9999*Math.random());return a in b.channels?void f():a}(),g=this.channels[a.channel_id]={channel:c.createDataChannel(f,this.dc_config)};for(var h in this.dc_handlers)e[h]=d[h]||this.dc_handlers[h],g.channel[h]=e[h];return g.channel.PeerSock=this,this.getDataChannel(a.channel_id)},getDataChannel:function(a){return this.channels[a]},setRemoteDescription:function(a,b,c){a.setRemoteDescription(new this.SessionDescription(b),function(){c&&c(a,b)},this.errorHandler)},createClientOffer:function(a,b){var c=this;a.createOffer(function(d){a.setLocalDescription(d,function(){b&&b(d)},c.errorHandler)},this.errorHandler)},answerPeerOffer:function(a,b,c){var d=this;a.setRemoteDescription(new this.SessionDescription(b),function(){a.createAnswer(function(b){a.setLocalDescription(b),c&&c(b)},d.errorHandler)},this.errorHandler)},newListeningChannel:function(a){var b=this;this.signal.onmessage(a.channel_id,function(c){var d=c.message;"offer"==d.type?(b.newPeerConnection({rtc_handlers:{ondatachannel:function(b){b.channel.onmessage=function(d){a.onMessage&&a.onMessage.call(this,{channel:b.channel,message:c,data:d.data})}}}}),b.client_id=c.peer_id,b.peer_id=c.client_id,b.answerPeerOffer(b.pc,d,function(d){b.signal.send(a.channel_id,c.peer_id,c.client_id,d)})):"answer"==d.type&&b.setRemoteDescription(b.pc,d)})},startListeningChannel:function(a){var b=this,c=this.pc?!0:!1,d=function(){};c||this.newPeerConnection(),this.newDataChannel({channel_id:a.channel_id,connection:b.pc,dc_handlers:{onopen:function(c){(a.onOpen||d).call(this,{channel:b.getDataChannel(a.channel_id).channel,event:c})},onmessage:function(c){(a.onMessage||d).call(this,{channel:b.getDataChannel(a.channel_id).channel,data:c.data,event:c})},onclose:function(c){(a.onClose||d).call(this,{channel:b.getDataChannel(a.channel_id).channel,event:c})},onerror:function(c){(a.onError||d).call(this,{channel:b.getDataChannel(a.channel_id).channel,event:c})}}}),this.client_id=a.client_id,this.peer_id=a.peer_id,c||this.createClientOffer(this.pc,function(c){b.signal.send(a.channel_id,a.peer_id,a.client_id,c)})},sendOnChannel:function(a,b){var c=this.getDataChannel(a).channel;"open"==c.readyState&&c.send(b)}})};